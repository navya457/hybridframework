<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="1" passed="0">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="2349" started-at="2020-03-10T17:54:27 IST" finished-at="2020-03-10T17:54:29 IST">
    <groups>
    </groups>
    <test name="Test" duration-ms="2349" started-at="2020-03-10T17:54:27 IST" finished-at="2020-03-10T17:54:29 IST">
      <class name="Test.Driver_Test">
        <test-method status="PASS" signature="startServer()[pri:0, instance:Test.Driver_Test@687080dc]" name="startServer" is-config="true" duration-ms="33708" started-at="2020-03-10T17:53:53 IST" finished-at="2020-03-10T17:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startServer -->
        <test-method status="PASS" signature="m1()[pri:0, instance:Test.Driver_Test@687080dc]" name="m1" is-config="true" duration-ms="192" started-at="2020-03-10T17:54:27 IST" depends-on-methods="utils.AppiumService.startServer" finished-at="2020-03-10T17:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m1 -->
        <test-method status="PASS" signature="setupSys()[pri:0, instance:Test.Driver_Test@687080dc]" name="setupSys" is-config="true" duration-ms="29" started-at="2020-03-10T17:54:27 IST" finished-at="2020-03-10T17:54:27 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setupSys -->
        <test-method status="PASS" signature="m2(java.lang.reflect.Method)[pri:0, instance:Test.Driver_Test@687080dc]" name="m2" is-config="true" duration-ms="19" started-at="2020-03-10T17:54:27 IST" finished-at="2020-03-10T17:54:27 IST">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void Test.Driver_Test.register_DriverApplication() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- m2 -->
        <test-method status="FAIL" signature="register_DriverApplication()[pri:0, instance:Test.Driver_Test@687080dc]" name="register_DriverApplication" duration-ms="1685" started-at="2020-03-10T17:54:27 IST" finished-at="2020-03-10T17:54:29 IST">
          <exception class="org.openqa.selenium.InvalidSelectorException">
            <message>
              <![CDATA[Locator Strategy 'css selector' is not supported for this session
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'NavyaShrees-MacBook-Air.local', ip: 'fe80:0:0:0:c12:c0f4:57c3:7f13%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_241'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {UDID: 52001a30b48594f1, appActivity: io.nativebase.market.geekya..., appPackage: io.nativebase.market.geekya..., automationName: appium, databaseEnabled: false, desired: {UDID: 52001a30b48594f1, appActivity: io.nativebase.market.geekya..., appPackage: io.nativebase.market.geekya..., automationName: appium, deviceName: Galaxy J7 Pro, platformName: android, platformVersion: 9}, deviceApiLevel: 28, deviceManufacturer: samsung, deviceModel: SM-J730GM, deviceName: 52001a30b48594f1, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: 52001a30b48594f1, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: LINUX, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1857, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 9fdf730e-3091-434a-b2d8-1ce8bb53c07f
*** Element info: {Using=id, value=com.android.packageinstaller:id/permission_allow_button}]]>
            </message>
            <full-stacktrace>
              <![CDATA[org.openqa.selenium.InvalidSelectorException: Locator Strategy 'css selector' is not supported for this session
For documentation on this error, please visit: http://seleniumhq.org/exceptions/invalid_selector_exception.html
Build info: version: '3.14.0', revision: 'aacccce0', time: '2018-08-02T20:19:58.91Z'
System info: host: 'NavyaShrees-MacBook-Air.local', ip: 'fe80:0:0:0:c12:c0f4:57c3:7f13%en0', os.name: 'Mac OS X', os.arch: 'x86_64', os.version: '10.15.3', java.version: '1.8.0_241'
Driver info: io.appium.java_client.android.AndroidDriver
Capabilities {UDID: 52001a30b48594f1, appActivity: io.nativebase.market.geekya..., appPackage: io.nativebase.market.geekya..., automationName: appium, databaseEnabled: false, desired: {UDID: 52001a30b48594f1, appActivity: io.nativebase.market.geekya..., appPackage: io.nativebase.market.geekya..., automationName: appium, deviceName: Galaxy J7 Pro, platformName: android, platformVersion: 9}, deviceApiLevel: 28, deviceManufacturer: samsung, deviceModel: SM-J730GM, deviceName: 52001a30b48594f1, deviceScreenDensity: 420, deviceScreenSize: 1080x1920, deviceUDID: 52001a30b48594f1, javascriptEnabled: true, locationContextEnabled: false, networkConnectionEnabled: true, pixelRatio: 2.625, platform: LINUX, platformName: LINUX, platformVersion: 9, statBarHeight: 63, takesScreenshot: true, viewportRect: {height: 1857, left: 0, top: 63, width: 1080}, warnings: {}, webStorageEnabled: false}
Session ID: 9fdf730e-3091-434a-b2d8-1ce8bb53c07f
*** Element info: {Using=id, value=com.android.packageinstaller:id/permission_allow_button}
at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:187)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:122)
at org.openqa.selenium.remote.http.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:49)
at org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:158)
at io.appium.java_client.remote.AppiumCommandExecutor.execute(AppiumCommandExecutor.java:69)
at org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:548)
at io.appium.java_client.DefaultGenericMobileDriver.execute(DefaultGenericMobileDriver.java:40)
at io.appium.java_client.AppiumDriver.execute(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.execute(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:322)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:56)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at org.openqa.selenium.remote.RemoteWebDriver.findElementById(RemoteWebDriver.java:368)
at io.appium.java_client.DefaultGenericMobileDriver.findElementById(DefaultGenericMobileDriver.java:64)
at io.appium.java_client.AppiumDriver.findElementById(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElementById(AndroidDriver.java:1)
at org.openqa.selenium.By$ById.findElement(By.java:188)
at org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:314)
at io.appium.java_client.DefaultGenericMobileDriver.findElement(DefaultGenericMobileDriver.java:52)
at io.appium.java_client.AppiumDriver.findElement(AppiumDriver.java:1)
at io.appium.java_client.android.AndroidDriver.findElement(AndroidDriver.java:1)
at Test.Driver_Test.register_DriverApplication(Driver_Test.java:79)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:133)
at org.testng.internal.TestInvoker.invokeMethod(TestInvoker.java:584)
at org.testng.internal.TestInvoker.invokeTestMethod(TestInvoker.java:172)
at org.testng.internal.MethodRunner.runInSequence(MethodRunner.java:46)
at org.testng.internal.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:804)
at org.testng.internal.TestInvoker.invokeTestMethods(TestInvoker.java:145)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:146)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:128)
at java.util.ArrayList.forEach(ArrayList.java:1257)
at org.testng.TestRunner.privateRun(TestRunner.java:770)
at org.testng.TestRunner.run(TestRunner.java:591)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:402)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:396)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:355)
at org.testng.SuiteRunner.run(SuiteRunner.java:304)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:53)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:96)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1180)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1102)
at org.testng.TestNG.runSuites(TestNG.java:1032)
at org.testng.TestNG.run(TestNG.java:1000)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- org.openqa.selenium.InvalidSelectorException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- register_DriverApplication -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:Test.Driver_Test@687080dc]" name="tearDown" is-config="true" duration-ms="577" started-at="2020-03-10T17:54:29 IST" finished-at="2020-03-10T17:54:29 IST">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- Test.Driver_Test -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
